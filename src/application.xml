<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!--
	-->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<context:component-scan base-package="com.geariot">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	
	
	<!-- 多个 数据源  -->
	<!-- <bean id="dataSource_xuzhuang" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driverClassName}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
    </bean>  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />  
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />    
    </bean>  
    <bean id="dataSource_yuqiao" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driverClassName}" />  
        <property name="url" value="${jdbc.url_yuqiao}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />    
    </bean>  --> 
    
    <!-- <bean id="mysqlDynamicDataSource" class="com.geariot.platform.freelycar.model.DataSources">
        <property name="targetDataSources">
            标识符类型
            <map key-type="com.geariot.platform.freelycar.model.DBType">
                <entry key="xuzhuang" value-ref="dataSource_xuzhuang"/>
                <entry key="jinao" value-ref="dataSource"/>
                <entry key="yuqiao" value-ref="dataSource_yuqiao"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource_xuzhuang"/>
    </bean> -->
	
	
	<!-- 单个 数据源 -->
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="testWhileIdle" value="true" />
        <property name= "timeBetweenEvictionRunsMillis" value="7200000" />  
        <property name= "numTestsPerEvictionRun" value="30" />  
        <property name="minEvictableIdleTimeMillis" value="7200000" />
	</bean>
	
	
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
<!-- 		<property name="dataSource" ref="mysqlDynamicDataSource"></property> -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
		<property name="packagesToScan" value="com.geariot.platform.freelycar.entities"/>
	</bean>
	


	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"/>
		<property name="maxUploadSize" value="10485760000"/>
		<property name="maxInMemorySize" value="40960"/>
	</bean>

	<bean id="cacheManagerEhcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
        <!-- 由于hibernate也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
        <property name="shared" value="true"/>
    </bean>
    
    <!-- shiro配置 -->
    <bean name="credentialsMatcher" class="com.geariot.platform.freelycar.shiro.MD5CredentialsMatcher"/>
    <bean id="jdbcRealm" class="com.geariot.platform.freelycar.shiro.ShiroRealmBaseDatabase">
	    <!-- 使用继承了org.apache.shiro.realm.jdbc.JdbcRealm的自定义realm，集成使用了本项目的AdminService -->
	    <property name="permissionsLookupEnabled" value="true"/>
	    <property name="credentialsMatcher" ref="credentialsMatcher"/>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <property name="realm" ref="jdbcRealm"/>
	</bean>
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>
    	<!-- override these for application-specific URLs if you like:-->
    	<!--
    	<property name="loginUrl" value="/freelycar/api/login"/>
    	<property name="successUrl" value="/freelycar/api/dashboard/index"/>
    	<property name="unauthorizedUrl" value="/unauthorized.html"/>
    	-->
    	<!-- <property name="filters">  
            <map>  
                <entry key="authc">  
                    <bean class="com.geariot.platform.freelycar.utils.ShiroAjaxFilter" />  
                </entry>  
            </map>  
        </property> -->
    	<property name="filterChainDefinitions">
        	<value>
        		 /freelycar/api/#/** = authc
            	<!-- # some example chain definitions:
        		/api/shiro = anon
        		/api/test/* = authc
            	/admin/** = authc, roles[admin]
            	/docs/** = authc, perms[document:read]
            	
            	/api/test/get = authc, perms[data:get]
            	# more URL-to-FilterChain definitions here -->
        	</value>
	    </property>
	</bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- shiro配置结束 -->
    
    
	<tx:annotation-driven transaction-manager="transactionManager" />
	<task:annotation-driven/>
</beans>
